name: Tests

on: [push]

jobs:
    backend-dev-tests:
        runs-on: ubuntu-latest

        steps:
            - name: Setup PHP with tools
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.2'
            - uses: actions/checkout@v3
            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"
            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
            - name: Generate key
              run: php artisan key:generate
            - name: Directory Permissions
              run: chmod -R 777 storage bootstrap/cache
            - name: Create Database
              run: |
                  mkdir -p database
                  touch database/database.sqlite
            - name: Execute tests (Unit and Feature tests) via Pest
              env:
                  DB_CONNECTION: sqlite
                  DB_DATABASE: database/database.sqlite
              run: vendor/bin/pest --group=feature,unit,architecture

    build-frontend-assets:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: 19.x

            - name: Install Vendor Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            - name: Install dependencies
              run: npm ci

            - name: Run Build
              run: npm run build --if-present

    deploy-to-staging:
        needs: [backend-dev-tests, build-frontend-assets]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Save version to file
              run: |
                  version=$(git rev-parse HEAD)
                  echo $version > ${{ env.DEPLOYED_VERSION_FILE }}

            - name: Upload version as artifact
              uses: actions/upload-artifact@v3
              with:
                  name: version
                  path: ${{ env.DEPLOYED_VERSION_FILE }}

            - name: Deploy to Staging Environment
              uses: jbrooksuk/laravel-forge-action@v1.0.2
              with:
                  trigger_url: ${{ secrets.TEST_ENV_DEPLOYMENT_TRIGGER_URL }}
