name: Tests

on: [push]

jobs:
    backend-tests:
        runs-on: ubuntu-latest

        steps:
            - name: Setup PHP with tools
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.2'
            - uses: actions/checkout@v3
            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"
            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
            - name: Generate key
              run: php artisan key:generate
            - name: Directory Permissions
              run: chmod -R 777 storage bootstrap/cache
            - name: Create Database
              run: |
                  mkdir -p database
                  touch database/database.sqlite
            - name: Execute tests (Unit and Feature tests) via Pest
              env:
                  DB_CONNECTION: sqlite
                  DB_DATABASE: database/database.sqlite
              run: vendor/bin/pest --group=feature,unit,architecture

    frontend-tests:
        runs-on: ubuntu-latest
        env:
            LARAVEL_BYPASS_ENV_CHECK: 1
        steps:
            - uses: actions/checkout@v3
            - name: Setup PHP with tools
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.2'
            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.dusk.actions', '.env');"
            - name: Create Database
              run: |
                  set -a
                  . ./.env
                  set +a
                  sudo systemctl start mysql
                  mysql --user="$DB_USERNAME" --password="$DB_PASSWORD" -e "CREATE DATABASE \`$DB_DATABASE\` character set UTF8mb4 collate utf8mb4_bin;"
            - name: Install Composer Dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader
            - name: Generate Application Key
              run: php artisan key:generate
            - name: Upgrade Chrome Driver
              run: php artisan dusk:chrome-driver --detect
            - name: Start Chrome Driver
              run: ./vendor/laravel/dusk/bin/chromedriver-linux &

            - name: Install Node.js dependencies
              run: npm ci

            - name: Build frontend assets with Vite
              run: npm run build

            - name: Run Vitests
              run: npm run test

            - name: Run Laravel Server
              run: php artisan serve --no-reload &
            - name: Run Dusk Tests
              run: php artisan dusk
            - name: Upload Screenshots
              if: failure()
              uses: actions/upload-artifact@v2
              with:
                  name: screenshots
                  path: tests/Browser/screenshots
            - name: Upload Console Logs
              if: failure()
              uses: actions/upload-artifact@v2
              with:
                  name: console
                  path: tests/Browser/console

    deploy-to-staging:
        needs: [backend-tests, frontend-tests]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Deploy to Staging Environment
              uses: jbrooksuk/laravel-forge-action@v1.0.2
              with:
                  trigger_url: ${{ secrets.DEPLOYMENT_TRIGGER_URL }}
